import java.util.Arrays;
import java.util.Comparator;

class Activity {
    int start;
    int finish;

    public Activity(int start, int finish) {
        this.start = start;
        this.finish = finish;
    }
}

class FinishTimeComparator implements Comparator<Activity> {
    @Override
    public int compare(Activity a1, Activity a2) {
        return a1.finish - a2.finish;
    }
}

class Tester {

    public static int findMaxActivities(int start[], int finish[]) {
        int n = start.length;
        Activity[] activities = new Activity[n];

        for (int i = 0; i < n; i++) {
            activities[i] = new Activity(start[i], finish[i]);
        }

        Arrays.sort(activities, new FinishTimeComparator());

        int count = 1;
        int lastFinishTime = activities[0].finish;

        for (int i = 1; i < n; i++) {
            if (activities[i].start >= lastFinishTime) {
                count++;
                lastFinishTime = activities[i].finish;
            }
        }

        return count;
    }

    public static void main(String[] args) {
        int start[] = {1, 3, 0, 5, 8, 5};
        int finish[] = {2, 4, 6, 7, 9, 9};

        System.out.println("Maximum number of activities: " + findMaxActivities(start, finish));
    }
}
